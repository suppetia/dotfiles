global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'

endglobal

priority 10
context "math()"
#snippet ":(a|b|y|p|q|w|z|x|t|m|l|s)" "greek Symbols" rwA
snippet ":(\w)" "greek Symbols" rwA
`!p 
symbols = {
  "a": "alpha",
  "b": "beta",
  "y": "gamma",
  "p": "phi",
	"q": "psi",
  "w": "omega",
  "z": "zeta",
  "x": "chi",
  "t": "theta",
	"m": "mu",
	"l": "lambda",
	"s": "sigma",
}
val = symbols.get(match.group(1).lower())
if val is None:
	snip.rv = f":{match.group(1)}"
else:
	snip.rv = f"\\{val[0].upper() if match.group(1).isupper() else val[0]}{val[1:]}"
`
endsnippet

priority 100
context "math()"
snippet "::(p|t|e)" "alternative greek Symbols" rwA
\\`!p 
symbols = {
  "p": "varphi",
  "t": "vartheta",
	"e": "varepsilon",
}
snip.rv = symbols[match.group(1)]
`
endsnippet

snippet :qed "QED" wA
\hspace*{\fill}$\Box$
endsnippet


